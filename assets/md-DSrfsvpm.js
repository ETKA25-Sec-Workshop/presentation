import{b as s,o as l,w as o,g as e,B as n,v as u,x as d,C as i}from"./modules/vue-DERLY0Zz.js";import{I as c}from"./slidev/default-B0mHNixT.js";import{u as m,f as p}from"./slidev/context-DMq8kJs3.js";import"./index-cGeu2c-g.js";import"./modules/shiki-BnWTCKI4.js";const v={__name:"slides-secure-coding.md__slidev_68",setup(h){const{$clicksContext:r,$frontmatter:a}=m();return r.setup(),(f,t)=>(l(),s(c,u(d(i(p)(i(a),67))),{default:o(()=>t[0]||(t[0]=[e("h1",null,"CWE-1357: Reliance on Insufficiently Trustworthy Component: Supply Chain Vulnerability",-1),e("ul",null,[e("li",null,[n("Abhängigkeiten, die wir verwenden, können verwundbar sein. In unserem Beispiel ist das die Bibliothek "),e("code",null,"xstream"),n(", die das Parsen von XML-Upload ermöglicht. Sie ist zu alt und enthält eine "),e("em",null,"OS Command Injection"),n("-Schwachstelle")]),e("li",null,"Tools wie Dependency Check/Track oder die IDE, zeigen die Schwachstellen an (CVE)"),e("li",null,"Diese sind nicht immer leicht zu verstehen u.a. ist häufig unklar, ob man das angreifbare Feature verwendet")],-1)])),_:1,__:[0]},16))}};export{v as default};
